name: Build on sonar

on:
  push:
    branches:
      - sonarqube
  pull_request:
    types: [opened, synchronize, reopened]
    
  workflow_dispatch:
    
jobs:
  build:
    name: Build
    
    runs-on: ubuntu-latest
    steps:
    
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.301
          
      - name: Install Report Generator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #shell: powershell
        run: |
          dotnet-sonarscanner begin /k:"Netizine_ClearBank.DeveloperTest" /o:"netizine" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet restore ./ClearBank.DeveloperTest.sln
          dotnet build ./ClearBank.DeveloperTest.sln --configuration Release
          dotnet test ./tests/ClearBank.DeveloperTest.Tests/ClearBank.DeveloperTest.Tests.csproj --collect:"XPlat Code Coverage" --logger trx --results-directory $GITHUB_WORKSPACE/tests/testresults
          reportgenerator -reports:$GITHUB_WORKSPACE/tests/testresults/**/coverage.cobertura.xml -targetdir:$GITHUB_WORKSPACE/tests/coverlet/reports -reporttypes:"SonarQube"
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
